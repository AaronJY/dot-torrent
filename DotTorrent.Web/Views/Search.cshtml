@using DotTorrent.Web.Models
@model SearchViewModel

@{
    ViewData["Title"] = "Search";
    Layout = "~/Layouts/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            @using(Html.BeginForm("", "Search", FormMethod.Get))
            {
               <div class="input-group mb-2">
                  <div class="input-group-prepend">
                      <div class="input-group-text">
                          <i class="fa fa-search"></i>
                      </div>
                  </div>
                  @Html.TextBoxFor(x => x.Query, new { placeholder = "Movie title, or IMDB ID...", @class = "form-control form-control-lg"})
              </div>
            }
        </div>
    </div>

    @if (Model.ErrorMessage != null)
    {
      <div class="alert alert-danger">
        <span><strong>Error: </strong> @Model.ErrorMessage</span>
      </div>
    }

    @if (Model.SearchResult != null)
    {
      <div class="row">
        <div class="col-sm-12">
          <h2>@Model.SearchResult.Media.Title</h2>
          <hr />
        </div>
      </div>
      <div class="row">
        <div class="col-sm-12 col-md-6">
          <img src="@Model.SearchResult.Media.PosterUrl" />
        </div>
        <div class="col-sm-12 col-md-6">
          <p>Release Year: @Model.SearchResult.Media.ReleaseYear</p>
          <p>Actors: @string.Join(", ", Model.SearchResult.Media.Actors).Trim()</p>
          <p>IMDB ID: @Model.SearchResult.Media.IMDBId</p>
          <p>Plot: @Model.SearchResult.Media.Plot</p>
        </div>
      </div>

      <h3>Torrents</h3>
      <hr />

      @foreach (TorrentViewModel torrentVm in Model.SearchResult.Torrents)
      {
        @await Html.PartialAsync("~/Views/Partials/TorrentPartial.cshtml", torrentVm)
      }
    }
</div>